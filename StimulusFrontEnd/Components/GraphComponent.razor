@using StimulusFrontEnd.Services;
@using static StimulusFrontEnd.Components.Connector
@using static StimulusFrontEnd.Components.Cercle
@inject MouseService mouseSrv;
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntim
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IUpdateService updateService

<div class="row mt-2">
    <div class="col">
        <svg width="100%" height="800" xmlns="http://www.w3.org/2000/svg"
        @onmousemove=@(e => mouseSrv.FireMove(this, e))
        @onmouseup=@(e => mouseSrv.FireUp(this, e))
        @onmouseout=@(e => mouseSrv.FireLeave(this, e))>
            @foreach (var item in Nodes)
            {
                <Cercle Node="@item"></Cercle>
            }
        </svg>
    </div>
</div>

@code {
    private HttpClient httpClient;
    private Client client;

    public List<Noeud> Nodes { get; set; } = new();
    protected override async void OnInitialized()
    {
        var handler = new HttpClientHandler();
        handler.ClientCertificateOptions = ClientCertificateOption.Manual;
        handler.ServerCertificateCustomValidationCallback =
            (httpRequestMessage, cert, cetChain, policyErrors) =>
            {
                return true;
            };
        httpClient = new HttpClient(handler);
        httpClient.BaseAddress = new Uri("https://p22e1api-dicjprojet.cegepjonquiere.ca/");
        client = new Client(httpClient);
    }

}
